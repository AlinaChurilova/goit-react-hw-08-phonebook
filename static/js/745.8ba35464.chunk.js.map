{"version":3,"file":"static/js/745.8ba35464.chunk.js","mappings":"oSAUMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,EAAQ,CACZC,YAAa,CACXJ,QAAS,OACTE,aAAc,QAEdG,OAAQ,CACJL,QAAS,QACTM,YAAa,OACbC,WAAY,SAIL,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EASD,OACE,iBAAKC,UAAU,YAAf,WACM,qDACM,SAAC,MAAD,CAAQjB,MAAO,CAAEI,WAAY,EAAGP,QAAS,eAAgBqB,QAAS,UAExE,kBAAMC,SAZO,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACb,EAOqCZ,MAAOP,EAAOC,KAAM6B,aAAa,MAA/D,WACI,UAAC,IAAD,CAAavB,MAAOA,EAAMC,YAA1B,WACI,SAAC,IAAD,sBACA,SAAC,IAAD,CACMuB,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,SAAUZ,QAIpB,UAAC,IAAD,CAAab,MAAOA,EAAMC,YAA1B,WACI,SAAC,IAAD,wBACA,SAAC,IAAD,CACMuB,KAAK,WACLT,KAAK,WACLC,MAAOL,EACPc,SAAUZ,QAGpB,SAAC,IAAD,CAAQb,MAAOA,EAAME,OACXsB,KAAK,SACLE,QAAQ,WACRC,MAAM,UAHhB,yBAWb,C","sources":["views/LoginView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Button } from '@mui/material';\nimport '../index.css'\nimport { ImWink } from 'react-icons/im';\n\nconst styles = {\n  form: {\n    width: 200,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nconst style = {\n  FormControl: {\n    display: 'flex',\n    marginBottom: '20px',\n    },\n    Button: {\n        display: 'block',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n    }\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className='Container'>\n          <h1>Welcome! Please log in!\n                <ImWink style={{ marginLeft: 4, display: 'inline-block', padding: 20  }} />\n          </h1>\n          <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n              <FormControl style={style.FormControl}>\n                  <InputLabel>E-mail</InputLabel>\n                  <Input\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={handleChange}\n                  />\n              </FormControl>  \n              \n              <FormControl style={style.FormControl}>\n                  <InputLabel>Password</InputLabel>\n                  <Input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                  />\n              </FormControl>   \n              <Button style={style.Button}\n                        type=\"submit\"\n                        variant=\"outlined\"\n                        color=\"primary\"\n              >\n                  Log in   \n              </Button>\n      </form>\n\n    </div>\n  );\n}"],"names":["styles","form","width","label","display","flexDirection","marginBottom","style","FormControl","Button","marginRight","marginLeft","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","padding","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","variant","color"],"sourceRoot":""}